/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package kinomaniak_mgmt;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 *
 * @author qbass
 */
public class MainFrame extends javax.swing.JFrame {
     MovieDBMgmt2 mgmt;
    /**
     * Creates new form MainFrame
     */
     public void init(){
         pOptions.setVisible(false);
        pMain.setVisible(true);
        bLoad.setVisible(true);
        bSave.setVisible(false);
        pAddMov.setVisible(false);
        pListMov.setVisible(false);
        bReturn.setVisible(false);
        pAddCRoom.setVisible(false);
        pListCRoom.setVisible(false);
        pAddShow.setVisible(false);
        pListShow.setVisible(false);
        pAddUser.setVisible(false);
        pListUser.setVisible(false);
        pListRes.setVisible(false);
        bExit.setVisible(false);
        pLogs.setVisible(false);
        pStats.setVisible(false);
        lSaveInfo.setVisible(false);
        pAddProduct.setVisible(false);
        pListProducts.setVisible(false);
        pAddAttraction.setVisible(false);
        pListAttractions.setVisible(false);
     }
     
    public MainFrame() {
        initComponents();
        init();
        this.mgmt = new MovieDBMgmt2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        pMain = new javax.swing.JPanel();
        bLoad = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        pOptions = new javax.swing.JPanel();
        bAddMov = new javax.swing.JButton();
        bAddCRoom = new javax.swing.JButton();
        bAddShow = new javax.swing.JButton();
        bListMov = new javax.swing.JButton();
        bListShow = new javax.swing.JButton();
        bListCRoom = new javax.swing.JButton();
        bAddUser = new javax.swing.JButton();
        bListUser = new javax.swing.JButton();
        bListRes = new javax.swing.JButton();
        bListLogs = new javax.swing.JButton();
        bListStats = new javax.swing.JButton();
        bSaveXML = new javax.swing.JButton();
        bAddProd = new javax.swing.JButton();
        bListProducts = new javax.swing.JButton();
        bAddAttraction = new javax.swing.JButton();
        bListAttraction = new javax.swing.JButton();
        bLoadXML = new javax.swing.JButton();
        pAddMov = new javax.swing.JPanel();
        eMovieName = new javax.swing.JTextField();
        lMovieName = new javax.swing.JLabel();
        lMovieGenre = new javax.swing.JLabel();
        lMovieRating = new javax.swing.JLabel();
        lMovieDesc = new javax.swing.JLabel();
        eMovieGenre = new javax.swing.JTextField();
        eMovieRating = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tMovieDesc = new javax.swing.JTextArea();
        bAddMovOK = new javax.swing.JButton();
        pAddShow = new javax.swing.JPanel();
        cbMovieList = new javax.swing.JComboBox();
        cbCRoomList = new javax.swing.JComboBox();
        lMovieSet = new javax.swing.JLabel();
        lCRoomSet = new javax.swing.JLabel();
        lTimeSet = new javax.swing.JLabel();
        lDateSet = new javax.swing.JLabel();
        eHourSet = new javax.swing.JTextField();
        lSep1 = new javax.swing.JLabel();
        eMinuteSet = new javax.swing.JTextField();
        eDaySet = new javax.swing.JTextField();
        eMonthSet = new javax.swing.JTextField();
        lSep2 = new javax.swing.JLabel();
        lSep3 = new javax.swing.JLabel();
        eYearSet = new javax.swing.JTextField();
        bShowAddSet = new javax.swing.JButton();
        pLogs = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        liLogList = new javax.swing.JList();
        jScrollPane10 = new javax.swing.JScrollPane();
        tLogText = new javax.swing.JTextArea();
        bGetLog = new javax.swing.JButton();
        bClearLog = new javax.swing.JButton();
        pStats = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        liStatList = new javax.swing.JList();
        bGetStat = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        tStatText = new javax.swing.JTextArea();
        bClearStat = new javax.swing.JButton();
        pListShow = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        liShowList = new javax.swing.JList();
        bDelShowOK = new javax.swing.JButton();
        bShowShow = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tShowMore = new javax.swing.JTextArea();
        pListRes = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tResList = new javax.swing.JTextArea();
        pListMov = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        liMovieList = new javax.swing.JList();
        bDelMovie = new javax.swing.JButton();
        bShowMore = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tMovieMore = new javax.swing.JTextArea();
        bSaveMovSQL = new javax.swing.JButton();
        pListUser = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        liUserList = new javax.swing.JList();
        bDelUserOK = new javax.swing.JButton();
        pAddUser = new javax.swing.JPanel();
        lUserName = new javax.swing.JLabel();
        lPassword = new javax.swing.JLabel();
        lUType = new javax.swing.JLabel();
        eUserName = new javax.swing.JTextField();
        bUserAddOK = new javax.swing.JButton();
        ePassword = new javax.swing.JPasswordField();
        cbUType = new javax.swing.JComboBox();
        lPass = new javax.swing.JLabel();
        pListCRoom = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        liCRoomList = new javax.swing.JList();
        bDelCRoomSel = new javax.swing.JButton();
        pAddCRoom = new javax.swing.JPanel();
        lCRoomHello = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        eCRoomID = new javax.swing.JTextField();
        bCRoomAdd = new javax.swing.JButton();
        bReturn = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        lSaveInfo = new javax.swing.JLabel();
        pAddProduct = new javax.swing.JPanel();
        lName = new javax.swing.JLabel();
        lType = new javax.swing.JLabel();
        lPrice = new javax.swing.JLabel();
        lCount = new javax.swing.JLabel();
        eName = new javax.swing.JTextField();
        ePrice = new javax.swing.JTextField();
        eCount = new javax.swing.JTextField();
        cbType = new javax.swing.JComboBox();
        bAddProductOK = new javax.swing.JButton();
        pListProducts = new javax.swing.JPanel();
        sProdList = new javax.swing.JScrollPane();
        liProdList = new javax.swing.JList();
        bDelProd = new javax.swing.JButton();
        bProdMore = new javax.swing.JButton();
        sProdMore = new javax.swing.JScrollPane();
        tProdMore = new javax.swing.JTextArea();
        pAddAttraction = new javax.swing.JPanel();
        lAttrName = new javax.swing.JLabel();
        lAttrPrice = new javax.swing.JLabel();
        eAttrName = new javax.swing.JTextField();
        eAttrPrice = new javax.swing.JTextField();
        bAttrAdd = new javax.swing.JButton();
        pListAttractions = new javax.swing.JPanel();
        sAttrLisst = new javax.swing.JScrollPane();
        liAttrList = new javax.swing.JList();
        sAttrMore = new javax.swing.JScrollPane();
        tAttrMore = new javax.swing.JTextArea();
        bDelAttr = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Management app for Kinomaniak project");
        setResizable(false);

        bLoad.setText("LOAD");
        bLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadActionPerformed(evt);
            }
        });

        bSave.setText("SAVE");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bAddMov.setText("Add Movie");
        bAddMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMovActionPerformed(evt);
            }
        });

        bAddCRoom.setText("Add CRoom");
        bAddCRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddCRoomActionPerformed(evt);
            }
        });

        bAddShow.setText("Add Show");
        bAddShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddShowActionPerformed(evt);
            }
        });

        bListMov.setText("List Movies");
        bListMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListMovActionPerformed(evt);
            }
        });

        bListShow.setText("List Shows");
        bListShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListShowActionPerformed(evt);
            }
        });

        bListCRoom.setText("List CRooms");
        bListCRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListCRoomActionPerformed(evt);
            }
        });

        bAddUser.setText("Add User");
        bAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddUserActionPerformed(evt);
            }
        });

        bListUser.setText("List Users");
        bListUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListUserActionPerformed(evt);
            }
        });

        bListRes.setText("List Res");
        bListRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListResActionPerformed(evt);
            }
        });

        bListLogs.setText("Logs");
        bListLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListLogsActionPerformed(evt);
            }
        });

        bListStats.setText("Stats");
        bListStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListStatsActionPerformed(evt);
            }
        });

        bSaveXML.setText("SaveXML");
        bSaveXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveXMLActionPerformed(evt);
            }
        });

        bAddProd.setText("Add Product");
        bAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddProdActionPerformed(evt);
            }
        });

        bListProducts.setText("List Products");
        bListProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListProductsActionPerformed(evt);
            }
        });

        bAddAttraction.setText("Add Attraction");
        bAddAttraction.setName(""); // NOI18N
        bAddAttraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddAttractionActionPerformed(evt);
            }
        });

        bListAttraction.setText("List Attractions");
        bListAttraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListAttractionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pOptionsLayout = new javax.swing.GroupLayout(pOptions);
        pOptions.setLayout(pOptionsLayout);
        pOptionsLayout.setHorizontalGroup(
            pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pOptionsLayout.createSequentialGroup()
                        .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bAddProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bAddMov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bAddShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bAddAttraction, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOptionsLayout.createSequentialGroup()
                        .addComponent(bAddCRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pOptionsLayout.createSequentialGroup()
                        .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pOptionsLayout.createSequentialGroup()
                                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bListShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bListCRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                    .addComponent(bListMov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(pOptionsLayout.createSequentialGroup()
                                .addComponent(bListUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bListRes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bSaveXML, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bListLogs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bListStats, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bListProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bListAttraction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pOptionsLayout.setVerticalGroup(
            pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOptionsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddMov)
                    .addComponent(bListMov)
                    .addComponent(bListLogs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddCRoom)
                    .addComponent(bListCRoom)
                    .addComponent(bListStats))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddShow)
                    .addComponent(bListShow)
                    .addComponent(bSaveXML))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddUser)
                    .addComponent(bListUser)
                    .addComponent(bListRes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddProd)
                    .addComponent(bListProducts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAddAttraction)
                    .addComponent(bListAttraction))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        bLoadXML.setText("LoadXML");
        bLoadXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLoadXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pMainLayout = new javax.swing.GroupLayout(pMain);
        pMain.setLayout(pMainLayout);
        pMainLayout.setHorizontalGroup(
            pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMainLayout.createSequentialGroup()
                .addGroup(pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pMainLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(bLoadXML)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bLoad)
                        .addGap(18, 18, 18)
                        .addComponent(bSave))
                    .addGroup(pMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pMainLayout.setVerticalGroup(
            pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMainLayout.createSequentialGroup()
                .addGroup(pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLoad)
                    .addComponent(bSave)
                    .addComponent(bLoadXML))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pMain);
        pMain.setBounds(0, 0, 400, 280);

        pAddMov.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pAddMov.setMinimumSize(new java.awt.Dimension(600, 400));

        eMovieName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eMovieNameActionPerformed(evt);
            }
        });

        lMovieName.setText("Movie title:");

        lMovieGenre.setText("Genre:");

        lMovieRating.setText("Rating:");

        lMovieDesc.setText("Description:");

        tMovieDesc.setColumns(20);
        tMovieDesc.setRows(5);
        jScrollPane1.setViewportView(tMovieDesc);

        bAddMovOK.setText("Add Movie");
        bAddMovOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMovOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAddMovLayout = new javax.swing.GroupLayout(pAddMov);
        pAddMov.setLayout(pAddMovLayout);
        pAddMovLayout.setHorizontalGroup(
            pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddMovLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lMovieName)
                    .addComponent(lMovieGenre)
                    .addComponent(lMovieDesc)
                    .addComponent(lMovieRating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(eMovieName, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addComponent(eMovieGenre)
                        .addComponent(eMovieRating))
                    .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bAddMovOK)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(379, Short.MAX_VALUE))
        );
        pAddMovLayout.setVerticalGroup(
            pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddMovLayout.createSequentialGroup()
                .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lMovieName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lMovieGenre)
                    .addComponent(eMovieGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eMovieRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lMovieRating))
                .addGap(12, 12, 12)
                .addGroup(pAddMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lMovieDesc)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bAddMovOK)
                .addGap(0, 221, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pAddMov);
        pAddMov.setBounds(0, 20, 470, 250);

        lMovieSet.setText("Movie:");

        lCRoomSet.setText("CRoom:");

        lTimeSet.setText("Time: ");

        lDateSet.setText("Date:");

        eHourSet.setText("00");

        lSep1.setText(":");

        eMinuteSet.setText("00");

        eDaySet.setText("01");

        eMonthSet.setText("01");

        lSep2.setText("-");

        lSep3.setText("-");

        eYearSet.setText("2013");

        bShowAddSet.setText("Add Show");
        bShowAddSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowAddSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAddShowLayout = new javax.swing.GroupLayout(pAddShow);
        pAddShow.setLayout(pAddShowLayout);
        pAddShowLayout.setHorizontalGroup(
            pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddShowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAddShowLayout.createSequentialGroup()
                        .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lMovieSet)
                            .addComponent(lCRoomSet)
                            .addComponent(lTimeSet)
                            .addComponent(lDateSet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbMovieList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbCRoomList, 0, 130, Short.MAX_VALUE))
                            .addGroup(pAddShowLayout.createSequentialGroup()
                                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pAddShowLayout.createSequentialGroup()
                                        .addComponent(eHourSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lSep1))
                                    .addGroup(pAddShowLayout.createSequentialGroup()
                                        .addComponent(eDaySet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lSep2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pAddShowLayout.createSequentialGroup()
                                        .addComponent(eMonthSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lSep3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eYearSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(eMinuteSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(bShowAddSet))
                .addContainerGap(278, Short.MAX_VALUE))
        );
        pAddShowLayout.setVerticalGroup(
            pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddShowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMovieList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lMovieSet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCRoomList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCRoomSet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTimeSet)
                    .addComponent(eHourSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSep1)
                    .addComponent(eMinuteSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pAddShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lDateSet)
                    .addComponent(eDaySet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eMonthSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSep2)
                    .addComponent(lSep3)
                    .addComponent(eYearSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bShowAddSet)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pAddShow);
        pAddShow.setBounds(0, 0, 460, 270);

        liLogList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane9.setViewportView(liLogList);

        tLogText.setEditable(false);
        tLogText.setColumns(20);
        tLogText.setRows(5);
        jScrollPane10.setViewportView(tLogText);

        bGetLog.setText("Get Logs");
        bGetLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGetLogActionPerformed(evt);
            }
        });

        bClearLog.setText("Del Logs");
        bClearLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearLogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pLogsLayout = new javax.swing.GroupLayout(pLogs);
        pLogs.setLayout(pLogsLayout);
        pLogsLayout.setHorizontalGroup(
            pLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLogsLayout.createSequentialGroup()
                .addGroup(pLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9)
                    .addComponent(bGetLog, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(bClearLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addContainerGap())
        );
        pLogsLayout.setVerticalGroup(
            pLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLogsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pLogsLayout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bGetLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bClearLog)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pLogs);
        pLogs.setBounds(0, 0, 480, 270);

        liStatList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane11.setViewportView(liStatList);

        bGetStat.setText("Get Stat");
        bGetStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGetStatActionPerformed(evt);
            }
        });

        tStatText.setEditable(false);
        tStatText.setColumns(20);
        tStatText.setRows(5);
        jScrollPane12.setViewportView(tStatText);

        bClearStat.setText("Del Stat");
        bClearStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearStatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pStatsLayout = new javax.swing.GroupLayout(pStats);
        pStats.setLayout(pStatsLayout);
        pStatsLayout.setHorizontalGroup(
            pStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pStatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane11)
                    .addComponent(bGetStat, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(bClearStat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );
        pStatsLayout.setVerticalGroup(
            pStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pStatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12)
                    .addGroup(pStatsLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bGetStat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bClearStat)
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLayeredPane1.add(pStats);
        pStats.setBounds(0, 0, 480, 270);

        liShowList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        liShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                liShowListMouseClicked(evt);
            }
        });
        liShowList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                liShowListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(liShowList);

        bDelShowOK.setText("Del Show");
        bDelShowOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelShowOKActionPerformed(evt);
            }
        });

        bShowShow.setText("More Info");
        bShowShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowShowActionPerformed(evt);
            }
        });

        tShowMore.setEditable(false);
        tShowMore.setColumns(20);
        tShowMore.setRows(5);
        jScrollPane6.setViewportView(tShowMore);

        javax.swing.GroupLayout pListShowLayout = new javax.swing.GroupLayout(pListShow);
        pListShow.setLayout(pListShowLayout);
        pListShowLayout.setHorizontalGroup(
            pListShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListShowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pListShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pListShowLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pListShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bDelShowOK)
                            .addComponent(bShowShow)))
                    .addGroup(pListShowLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        pListShowLayout.setVerticalGroup(
            pListShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListShowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pListShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addGroup(pListShowLayout.createSequentialGroup()
                        .addComponent(bDelShowOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bShowShow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6)))
                .addContainerGap())
        );

        jLayeredPane1.add(pListShow);
        pListShow.setBounds(0, 0, 540, 260);

        tResList.setColumns(20);
        tResList.setRows(5);
        jScrollPane8.setViewportView(tResList);

        javax.swing.GroupLayout pListResLayout = new javax.swing.GroupLayout(pListRes);
        pListRes.setLayout(pListResLayout);
        pListResLayout.setHorizontalGroup(
            pListResLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListResLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 59, Short.MAX_VALUE))
        );
        pListResLayout.setVerticalGroup(
            pListResLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListResLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pListRes);
        pListRes.setBounds(0, 0, 530, 260);

        liMovieList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        liMovieList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                liMovieListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(liMovieList);

        bDelMovie.setText("Del Movie");
        bDelMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelMovieActionPerformed(evt);
            }
        });

        bShowMore.setText("Show More");
        bShowMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowMoreActionPerformed(evt);
            }
        });

        tMovieMore.setEditable(false);
        tMovieMore.setColumns(20);
        tMovieMore.setRows(5);
        jScrollPane3.setViewportView(tMovieMore);

        bSaveMovSQL.setText("Save to DB");
        bSaveMovSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveMovSQLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pListMovLayout = new javax.swing.GroupLayout(pListMov);
        pListMov.setLayout(pListMovLayout);
        pListMovLayout.setHorizontalGroup(
            pListMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListMovLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pListMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pListMovLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(pListMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bShowMore)
                            .addGroup(pListMovLayout.createSequentialGroup()
                                .addComponent(bDelMovie)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bSaveMovSQL)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pListMovLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())))
        );
        pListMovLayout.setVerticalGroup(
            pListMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListMovLayout.createSequentialGroup()
                .addGroup(pListMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pListMovLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pListMovLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bDelMovie)
                            .addComponent(bSaveMovSQL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bShowMore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                    .addGroup(pListMovLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLayeredPane1.add(pListMov);
        pListMov.setBounds(0, 0, 430, 260);

        liUserList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(liUserList);

        bDelUserOK.setText("Del User");
        bDelUserOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelUserOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pListUserLayout = new javax.swing.GroupLayout(pListUser);
        pListUser.setLayout(pListUserLayout);
        pListUserLayout.setHorizontalGroup(
            pListUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(bDelUserOK)
                .addContainerGap(203, Short.MAX_VALUE))
        );
        pListUserLayout.setVerticalGroup(
            pListUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListUserLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 120, Short.MAX_VALUE))
            .addGroup(pListUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bDelUserOK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pListUser);
        pListUser.setBounds(0, 0, 500, 250);

        lUserName.setText("Name:");

        lPassword.setText("Password:");

        lUType.setText("User Type:");

        bUserAddOK.setText("Add User");
        bUserAddOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUserAddOKActionPerformed(evt);
            }
        });

        cbUType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Client", "1 - Cashier" }));

        lPass.setText("jLabel2");

        javax.swing.GroupLayout pAddUserLayout = new javax.swing.GroupLayout(pAddUser);
        pAddUser.setLayout(pAddUserLayout);
        pAddUserLayout.setHorizontalGroup(
            pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bUserAddOK)
                    .addGroup(pAddUserLayout.createSequentialGroup()
                        .addGroup(pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lUserName)
                            .addComponent(lPassword)
                            .addComponent(lUType))
                        .addGap(29, 29, 29)
                        .addGroup(pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eUserName)
                            .addComponent(ePassword)
                            .addComponent(cbUType, 0, 113, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(lPass)))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        pAddUserLayout.setVerticalGroup(
            pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddUserLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lUserName)
                    .addComponent(eUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPassword)
                    .addComponent(ePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lPass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lUType)
                    .addComponent(cbUType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bUserAddOK)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pAddUser);
        pAddUser.setBounds(0, 0, 540, 270);

        liCRoomList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(liCRoomList);

        bDelCRoomSel.setText("Del CRoom");
        bDelCRoomSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelCRoomSelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pListCRoomLayout = new javax.swing.GroupLayout(pListCRoom);
        pListCRoom.setLayout(pListCRoomLayout);
        pListCRoomLayout.setHorizontalGroup(
            pListCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListCRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(bDelCRoomSel)
                .addContainerGap(183, Short.MAX_VALUE))
        );
        pListCRoomLayout.setVerticalGroup(
            pListCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListCRoomLayout.createSequentialGroup()
                .addGroup(pListCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDelCRoomSel))
                .addGap(0, 140, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pListCRoom);
        pListCRoom.setBounds(0, 0, 440, 270);

        lCRoomHello.setText("Adding CRoom with 10x10 seats...");

        jLabel1.setText("ID: ");

        bCRoomAdd.setText("Add CRoom");
        bCRoomAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCRoomAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAddCRoomLayout = new javax.swing.GroupLayout(pAddCRoom);
        pAddCRoom.setLayout(pAddCRoomLayout);
        pAddCRoomLayout.setHorizontalGroup(
            pAddCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddCRoomLayout.createSequentialGroup()
                .addGroup(pAddCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAddCRoomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pAddCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lCRoomHello)
                            .addGroup(pAddCRoomLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eCRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pAddCRoomLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(bCRoomAdd)))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        pAddCRoomLayout.setVerticalGroup(
            pAddCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddCRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lCRoomHello)
                .addGap(35, 35, 35)
                .addGroup(pAddCRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(eCRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bCRoomAdd)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pAddCRoom);
        pAddCRoom.setBounds(0, 0, 420, 260);

        bReturn.setText("Return");
        bReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReturnActionPerformed(evt);
            }
        });
        jLayeredPane1.add(bReturn);
        bReturn.setBounds(0, 320, 130, 23);

        bExit.setText("Exit");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });
        jLayeredPane1.add(bExit);
        bExit.setBounds(400, 320, 80, 23);

        lSaveInfo.setForeground(new java.awt.Color(204, 0, 0));
        lSaveInfo.setText("Remember to save before exit...");
        jLayeredPane1.add(lSaveInfo);
        lSaveInfo.setBounds(140, 320, 240, 14);

        lName.setText("Name:");

        lType.setText("Type:");

        lPrice.setText("Price:");

        lCount.setText("Count");

        ePrice.setText("0.00");
        ePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ePriceActionPerformed(evt);
            }
        });

        eCount.setText("1");

        cbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));

        bAddProductOK.setText("Add Product");
        bAddProductOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddProductOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAddProductLayout = new javax.swing.GroupLayout(pAddProduct);
        pAddProduct.setLayout(pAddProductLayout);
        pAddProductLayout.setHorizontalGroup(
            pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddProductLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAddProductLayout.createSequentialGroup()
                        .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lName)
                            .addComponent(lType)
                            .addComponent(lPrice)
                            .addComponent(lCount))
                        .addGap(28, 28, 28)
                        .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eName)
                            .addComponent(cbType, 0, 93, Short.MAX_VALUE)
                            .addComponent(ePrice)
                            .addComponent(eCount)))
                    .addComponent(bAddProductOK))
                .addContainerGap(180, Short.MAX_VALUE))
        );
        pAddProductLayout.setVerticalGroup(
            pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddProductLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lName)
                    .addComponent(eName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lType)
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPrice)
                    .addComponent(ePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCount)
                    .addComponent(eCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bAddProductOK)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pAddProduct);
        pAddProduct.setBounds(0, 0, 342, 248);

        liProdList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        liProdList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                liProdListMouseClicked(evt);
            }
        });
        liProdList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                liProdListValueChanged(evt);
            }
        });
        sProdList.setViewportView(liProdList);

        bDelProd.setText("Del Product");
        bDelProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelProdActionPerformed(evt);
            }
        });

        bProdMore.setText("More Info");
        bProdMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProdMoreActionPerformed(evt);
            }
        });

        tProdMore.setEditable(false);
        tProdMore.setColumns(20);
        tProdMore.setRows(5);
        sProdMore.setViewportView(tProdMore);

        javax.swing.GroupLayout pListProductsLayout = new javax.swing.GroupLayout(pListProducts);
        pListProducts.setLayout(pListProductsLayout);
        pListProductsLayout.setHorizontalGroup(
            pListProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sProdList, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pListProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pListProductsLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pListProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bDelProd)
                            .addComponent(bProdMore)))
                    .addGroup(pListProductsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sProdMore, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pListProductsLayout.setVerticalGroup(
            pListProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pListProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sProdList, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addGroup(pListProductsLayout.createSequentialGroup()
                        .addComponent(bDelProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bProdMore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sProdMore)))
                .addContainerGap())
        );

        jLayeredPane1.add(pListProducts);
        pListProducts.setBounds(0, 0, 490, 249);

        lAttrName.setText("Name: ");

        lAttrPrice.setText("Price: ");

        eAttrPrice.setText("0.00");

        bAttrAdd.setText("Add Attraction");
        bAttrAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAttrAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAddAttractionLayout = new javax.swing.GroupLayout(pAddAttraction);
        pAddAttraction.setLayout(pAddAttractionLayout);
        pAddAttractionLayout.setHorizontalGroup(
            pAddAttractionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddAttractionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddAttractionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pAddAttractionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pAddAttractionLayout.createSequentialGroup()
                            .addComponent(lAttrName)
                            .addGap(18, 18, 18)
                            .addComponent(eAttrName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pAddAttractionLayout.createSequentialGroup()
                            .addComponent(lAttrPrice)
                            .addGap(22, 22, 22)
                            .addComponent(eAttrPrice)))
                    .addComponent(bAttrAdd))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        pAddAttractionLayout.setVerticalGroup(
            pAddAttractionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddAttractionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddAttractionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAttrName)
                    .addComponent(eAttrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddAttractionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAttrPrice)
                    .addComponent(eAttrPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bAttrAdd)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jLayeredPane1.add(pAddAttraction);
        pAddAttraction.setBounds(0, 0, 243, 194);

        liAttrList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        liAttrList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                liAttrListMouseClicked(evt);
            }
        });
        liAttrList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                liAttrListValueChanged(evt);
            }
        });
        sAttrLisst.setViewportView(liAttrList);

        tAttrMore.setEditable(false);
        tAttrMore.setColumns(20);
        tAttrMore.setRows(5);
        sAttrMore.setViewportView(tAttrMore);

        bDelAttr.setText("Del Attraction");
        bDelAttr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelAttrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pListAttractionsLayout = new javax.swing.GroupLayout(pListAttractions);
        pListAttractions.setLayout(pListAttractionsLayout);
        pListAttractionsLayout.setHorizontalGroup(
            pListAttractionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(pListAttractionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pListAttractionsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(sAttrLisst, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pListAttractionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pListAttractionsLayout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addComponent(bDelAttr))
                        .addGroup(pListAttractionsLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sAttrMore, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pListAttractionsLayout.setVerticalGroup(
            pListAttractionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
            .addGroup(pListAttractionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pListAttractionsLayout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(pListAttractionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(sAttrLisst, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                        .addGroup(pListAttractionsLayout.createSequentialGroup()
                            .addComponent(bDelAttr)
                            .addGap(35, 35, 35)
                            .addComponent(sAttrMore)))
                    .addGap(15, 15, 15)))
        );

        jLayeredPane1.add(pListAttractions);
        pListAttractions.setBounds(0, 0, 490, 256);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadActionPerformed
        pOptions.setVisible(true);
        bSave.setVisible(true);
        bReturn.setVisible(true);
        bExit.setVisible(true);
        lSaveInfo.setVisible(true);
        lSaveInfo.setText("Data loaded...");
        lSaveInfo.setForeground(Color.BLUE);
        this.mgmt.getData();
    }//GEN-LAST:event_bLoadActionPerformed

    private void eMovieNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eMovieNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eMovieNameActionPerformed

    private void bAddMovOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMovOKActionPerformed
        String name = eMovieName.getText();
        String genre = eMovieGenre.getText();
        String rating = eMovieRating.getText();
        String desc = tMovieDesc.getText();
        mgmt.addMovie(name, genre, rating,desc);
        pMain.setVisible(true);
        pOptions.setVisible(true);
        pAddMov.setVisible(false);
    }//GEN-LAST:event_bAddMovOKActionPerformed

    private void bAddMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMovActionPerformed
        pOptions.setVisible(false);
        pMain.setVisible(false);
        pAddMov.setVisible(true);
        pAddMov.repaint();
        tMovieDesc.setWrapStyleWord(true);
        tMovieDesc.setLineWrap(true);
    }//GEN-LAST:event_bAddMovActionPerformed

    private void bDelMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelMovieActionPerformed
        int sel = liMovieList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.delMovie(sel);
        pMain.setVisible(true);
        pListMov.setVisible(false);
    }//GEN-LAST:event_bDelMovieActionPerformed

    private void bShowMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowMoreActionPerformed
        int sel = liMovieList.getSelectedIndex();
        if(sel < 0) return;
        tMovieMore.setVisible(true);
        
        tMovieMore.setText("Name: "+mgmt.getMovies()[sel].getName()+"\nGenre: "+mgmt.getMovies()[sel].getGenre()+"\nRating: "
                +mgmt.getMovies()[sel].getRating()+"\nDesc:\n"+mgmt.getMovies()[sel].getDesc());
        tMovieMore.setWrapStyleWord(true);
        tMovieMore.setLineWrap(true);
    }//GEN-LAST:event_bShowMoreActionPerformed

    private void bReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReturnActionPerformed
        pOptions.setVisible(true);
        pMain.setVisible(true);
        bLoad.setVisible(true);
        bSave.setVisible(true);
        pAddMov.setVisible(false);
        pListMov.setVisible(false);
        pAddCRoom.setVisible(false);
        pListCRoom.setVisible(false);
        pAddShow.setVisible(false);
        pListShow.setVisible(false);
        pAddUser.setVisible(false);
        pListUser.setVisible(false);
        pListRes.setVisible(false);
        pLogs.setVisible(false);
        pStats.setVisible(false);
        pAddProduct.setVisible(false);
        pListProducts.setVisible(false);
        pAddAttraction.setVisible(false);
        pListAttractions.setVisible(false);
        lSaveInfo.setVisible(true);
        lSaveInfo.setText("Remember to save before exit...");
        lSaveInfo.setForeground(Color.red);
    }//GEN-LAST:event_bReturnActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        mgmt.saveData();
        lSaveInfo.setVisible(true);
        lSaveInfo.setText("Data saved...");
        lSaveInfo.setForeground(Color.blue);
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCRoomAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCRoomAddActionPerformed
        mgmt.addCRoom(Integer.parseInt(eCRoomID.getText()));
        pMain.setVisible(true);
        pAddCRoom.setVisible(false);
    }//GEN-LAST:event_bCRoomAddActionPerformed

    private void bAddCRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddCRoomActionPerformed
        pMain.setVisible(false);
        pAddCRoom.setVisible(true);
    }//GEN-LAST:event_bAddCRoomActionPerformed

    private void bListCRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListCRoomActionPerformed
        pMain.setVisible(false);
        pListCRoom.setVisible(true);
        Integer[] crooms = new Integer[mgmt.getCRooms().length];
        for(int i = 0;i<mgmt.getCRooms().length;i++){
            crooms[i] = mgmt.getCRooms()[i].getID();
        }
        liCRoomList.setListData((Integer[])crooms);
    }//GEN-LAST:event_bListCRoomActionPerformed

    private void bDelCRoomSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelCRoomSelActionPerformed
        int sel = liCRoomList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.delCRoom(sel);
        pMain.setVisible(true);
        pListCRoom.setVisible(false);
    }//GEN-LAST:event_bDelCRoomSelActionPerformed

    private void bAddShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddShowActionPerformed
        pMain.setVisible(false);
        pAddShow.setVisible(true);
        cbMovieList.removeAllItems();
        cbCRoomList.removeAllItems();
        for(int i = 0;i<mgmt.getMovies().length;i++){
            cbMovieList.addItem((String)mgmt.getMovies()[i].getName());
        }
        for(int i = 0;i<mgmt.getCRooms().length;i++){
            cbCRoomList.addItem((Integer)mgmt.getCRooms()[i].getID());
        }
    }//GEN-LAST:event_bAddShowActionPerformed

    private void bShowAddSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowAddSetActionPerformed
        int movsel = cbMovieList.getSelectedIndex();
        int cromsel = cbCRoomList.getSelectedIndex();
        int h = Integer.parseInt(eHourSet.getText());
        int m = Integer.parseInt(eMinuteSet.getText());
        int day = Integer.parseInt(eDaySet.getText());
        int mon = Integer.parseInt(eMonthSet.getText());
        int year = Integer.parseInt(eYearSet.getText());
        mgmt.setTime(h,m,day,mon,year);
        mgmt.addShow(mgmt.getMovies()[movsel],mgmt.getTime(),mgmt.getCRooms()[cromsel]);
        pMain.setVisible(true);
        pAddShow.setVisible(false);
    }//GEN-LAST:event_bShowAddSetActionPerformed

    private void bListShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListShowActionPerformed
        pMain.setVisible(false);
        pListShow.setVisible(true);
        tShowMore.setVisible(false);
        String[] shows = new String[mgmt.getShows().length];
        for(int i = 0;i<mgmt.getShows().length;i++){
            shows[i] = mgmt.getShows()[i].getFormatted()+" "+mgmt.getShows()[i].getMovie().getName();
        }
        liShowList.setListData((String[])shows);        
    }//GEN-LAST:event_bListShowActionPerformed

    private void bDelShowOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelShowOKActionPerformed
        int sel = liShowList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.delShow(sel);
        pMain.setVisible(true);
        pListShow.setVisible(false);
    }//GEN-LAST:event_bDelShowOKActionPerformed

    private void bShowShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowShowActionPerformed
        int sel = liShowList.getSelectedIndex();
        if(sel < 0) return;
        tShowMore.setVisible(true);
        tShowMore.setText("ID:"+mgmt.getShows()[sel].getID()+"\nTime: "+mgmt.getShows()[sel].getFormatted()+"\nName: "+mgmt.getShows()[sel].getMovie().getName()
                +"\nGenre: "+mgmt.getShows()[sel].getMovie().getGenre()+"\nRating: "
                +mgmt.getShows()[sel].getMovie().getRating()+"\nDesc:\n"+mgmt.getShows()[sel].getMovie().getDesc());
        tShowMore.setWrapStyleWord(true);
        tShowMore.setLineWrap(true);
    }//GEN-LAST:event_bShowShowActionPerformed

    private void bAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddUserActionPerformed
        pMain.setVisible(false);
        pAddUser.setVisible(true);
    }//GEN-LAST:event_bAddUserActionPerformed

    private void bUserAddOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUserAddOKActionPerformed
        String uname = eUserName.getText();
        String upass = ePassword.getText();
        int utype = cbUType.getSelectedIndex();
        mgmt.addUser(uname, upass, utype);
        pMain.setVisible(true);
        pAddUser.setVisible(false);
    }//GEN-LAST:event_bUserAddOKActionPerformed

    private void bListUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListUserActionPerformed
        pMain.setVisible(false);
        pListUser.setVisible(true);
        String[] users = new String[mgmt.getUsers().length];
        for(int i = 0;i<mgmt.getUsers().length;i++){
            users[i] = mgmt.getUsers()[i].getName()+" - "+mgmt.getUsers()[i].getUType();
        }
        liUserList.setListData((String[])users);
    }//GEN-LAST:event_bListUserActionPerformed

    private void bDelUserOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelUserOKActionPerformed
        int sel = liUserList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.delUser(sel);
        pMain.setVisible(true);
        pListUser.setVisible(false);
    }//GEN-LAST:event_bDelUserOKActionPerformed

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bExitActionPerformed

    private void bListResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListResActionPerformed
        pMain.setVisible(false);
        pListRes.setVisible(true);
        tResList.setText(mgmt.getFormattedRes());
    }//GEN-LAST:event_bListResActionPerformed

    private void bListStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListStatsActionPerformed
        pMain.setVisible(false);
        pStats.setVisible(true);
        File statdir = new File("stats");
        File[] statlist = statdir.listFiles();
        String[] files = new String[statlist.length];
        int i = 0;
        for (File file : statlist){
            files[i] = file.getName();
            i++;
        }
        liStatList.setListData((String[])files);
    }//GEN-LAST:event_bListStatsActionPerformed

    private void bListLogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListLogsActionPerformed
        pMain.setVisible(false);
        pLogs.setVisible(true);
        File logdir = new File("logs");
        File[] loglist = logdir.listFiles();
        String[] files = new String[loglist.length];
        int i = 0;
        for (File file : loglist){
            files[i] = file.getName();
            i++;
        }
        liLogList.setListData((String[])files);
        
    }//GEN-LAST:event_bListLogsActionPerformed

    private void bGetLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGetLogActionPerformed
        File logdir = new File("logs");
        File[] loglist = logdir.listFiles();
        int sel = liLogList.getSelectedIndex();
        try{
            FileInputStream file = new FileInputStream("logs/"+loglist[sel].getName());
            BufferedReader br = new BufferedReader(new InputStreamReader(file));
            String log = "";
            String tmp = null;
            while((tmp = br.readLine()) != null){
                log += tmp+"\n";
            }
            br.close();
            file.close();
            tLogText.setText(log);            
        }catch(FileNotFoundException e){
            tLogText.setText("File Not Found "+e);
        }catch(IOException e){
            tLogText.setText("IOError "+e);
        }
    }//GEN-LAST:event_bGetLogActionPerformed

    private void bGetStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGetStatActionPerformed
        File statdir = new File("stats");
        File[] statlist = statdir.listFiles();
        int sel = liStatList.getSelectedIndex();
        try{
            FileInputStream file = new FileInputStream("stats/"+statlist[sel].getName());
            BufferedReader br = new BufferedReader(new InputStreamReader(file));
            String log = "";
            String tmp = null;
            while((tmp = br.readLine()) != null){
                log += tmp+"\n";
            }
            br.close();
            file.close();
            tStatText.setText(log);            
        }catch(FileNotFoundException e){
            tStatText.setText("File Not Found "+e);
        }catch(IOException e){
            tStatText.setText("IOError "+e);
        }
    }//GEN-LAST:event_bGetStatActionPerformed

    private void bClearStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearStatActionPerformed
        File statdir = new File("stats");
        File[] statlist = statdir.listFiles();
        int sel = liStatList.getSelectedIndex();
        if(!statlist[sel].delete()){
            tStatText.setText("Error deleting file...");
        }else{
            tStatText.setText("File "+statlist[sel].getName()+" deleted.");
        }
        statlist = statdir.listFiles();
        String[] files = new String[statlist.length];
        int i = 0;
        for (File file : statlist){
            files[i] = file.getName();
            i++;
        }
        liStatList.setListData((String[])files);
    }//GEN-LAST:event_bClearStatActionPerformed

    private void bClearLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearLogActionPerformed
        File logdir = new File("logs");
        File[] loglist = logdir.listFiles();
        int sel = liLogList.getSelectedIndex();
        if(!loglist[sel].delete()){
            tLogText.setText("Error deleting file...");
        }else{
            tLogText.setText("File "+loglist[sel].getName()+" deleted.");
        }
        loglist = logdir.listFiles();
        String[] files = new String[loglist.length];
        int i = 0;
        for (File file : loglist){
            files[i] = file.getName();
            i++;
        }
        liLogList.setListData((String[])files);
    }//GEN-LAST:event_bClearLogActionPerformed

    private void bSaveXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveXMLActionPerformed
        mgmt.saveXML();
        
    }//GEN-LAST:event_bSaveXMLActionPerformed

    private void bLoadXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLoadXMLActionPerformed
        pOptions.setVisible(true);
        bSave.setVisible(true);
        bReturn.setVisible(true);
        bExit.setVisible(true);
        lSaveInfo.setVisible(true);
        lSaveInfo.setText("Data loaded...");
        lSaveInfo.setForeground(Color.BLUE);
        mgmt.loadXML();
    }//GEN-LAST:event_bLoadXMLActionPerformed

    private void bSaveMovSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveMovSQLActionPerformed
        int sel = liMovieList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.saveMovToSQL(sel);
        pMain.setVisible(true);
        pListMov.setVisible(false);
        lSaveInfo.setVisible(true);
        lSaveInfo.setText("Saved to MySQL DB");
        lSaveInfo.setForeground(Color.BLUE);
    }//GEN-LAST:event_bSaveMovSQLActionPerformed

    private void ePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ePriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ePriceActionPerformed

    private void bAddProductOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddProductOKActionPerformed
        String name = eName.getText();
        int type = cbType.getSelectedIndex();
        float price = Float.valueOf(ePrice.getText());
        int count = Integer.valueOf(eCount.getText());
        this.mgmt.addProd(name, type, price, count);
        pMain.setVisible(true);
        pOptions.setVisible(true);
        pAddProduct.setVisible(false);
        lSaveInfo.setText("Remember to save before exit...");
        lSaveInfo.setForeground(Color.red);
    }//GEN-LAST:event_bAddProductOKActionPerformed

    private void bAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddProdActionPerformed
        pMain.setVisible(false);
        pOptions.setVisible(false);
        pAddProduct.setVisible(true);
    }//GEN-LAST:event_bAddProdActionPerformed

    private void bDelProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelProdActionPerformed
        int sel = liProdList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.delProduct(sel);
        pMain.setVisible(true);
        pListProducts.setVisible(false);
    }//GEN-LAST:event_bDelProdActionPerformed

    private void bProdMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProdMoreActionPerformed
        int sel = liProdList.getSelectedIndex();
        if(sel < 0) return;
        tProdMore.setVisible(true);
        tProdMore.setText("ID:"+mgmt.getProds()[sel].getId()+"\nName: "+
                mgmt.getProds()[sel].getName()+"\nCount: "+
                mgmt.getProds()[sel].getCount()+"\nPrice: "+
                mgmt.getProds()[sel].getPrice());
        tProdMore.setWrapStyleWord(true);
        tProdMore.setLineWrap(true);
    }//GEN-LAST:event_bProdMoreActionPerformed

    private void bListProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListProductsActionPerformed
        pMain.setVisible(false);
        pListProducts.setVisible(true);
        tProdMore.setVisible(false);
        String[] prods = new String[mgmt.getProds().length];
        for(int i = 0;i<mgmt.getProds().length;i++){
            prods[i] = mgmt.getProds()[i].getName();
        }
        liProdList.setListData((String[])prods);     
    }//GEN-LAST:event_bListProductsActionPerformed

    private void bListMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListMovActionPerformed
        pMain.setVisible(false);
        pListMov.setVisible(true);
        tMovieMore.setVisible(false);
        String[] movs = new String[mgmt.getMovies().length];
        for(int i = 0;i<mgmt.getMovies().length;i++){
            movs[i] = mgmt.getMovies()[i].getName();
        }
        liMovieList.setListData((String[])movs);
    }//GEN-LAST:event_bListMovActionPerformed

    private void bAddAttractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddAttractionActionPerformed
       pAddAttraction.setVisible(true);
       pOptions.setVisible(false);
       pMain.setVisible(false);
    }//GEN-LAST:event_bAddAttractionActionPerformed

    private void liProdListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_liProdListMouseClicked
        int sel = liProdList.getSelectedIndex();
        if(sel < 0) return;
        tProdMore.setVisible(true);
        tProdMore.setText("ID:"+mgmt.getProds()[sel].getId()+"\nName: "+
                mgmt.getProds()[sel].getName()+"\nCount: "+
                mgmt.getProds()[sel].getCount()+"\nPrice: "+
                mgmt.getProds()[sel].getPrice());
        tProdMore.setWrapStyleWord(true);
        tProdMore.setLineWrap(true);
    }//GEN-LAST:event_liProdListMouseClicked

    private void liShowListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_liShowListMouseClicked
        int sel = liShowList.getSelectedIndex();
        if(sel < 0) return;
        tShowMore.setVisible(true);
        tShowMore.setText("ID:"+mgmt.getShows()[sel].getID()+"\nTime: "+mgmt.getShows()[sel].getFormatted()+"\nName: "+mgmt.getShows()[sel].getMovie().getName()
                +"\nGenre: "+mgmt.getShows()[sel].getMovie().getGenre()+"\nRating: "
                +mgmt.getShows()[sel].getMovie().getRating()+"\nDesc:\n"+mgmt.getShows()[sel].getMovie().getDesc());
        tShowMore.setWrapStyleWord(true);
        tShowMore.setLineWrap(true);
    }//GEN-LAST:event_liShowListMouseClicked

    private void liMovieListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_liMovieListValueChanged
        int sel = liMovieList.getSelectedIndex();
        if(sel < 0) return;
        tMovieMore.setVisible(true);
        
        tMovieMore.setText("Name: "+mgmt.getMovies()[sel].getName()+"\nGenre: "+mgmt.getMovies()[sel].getGenre()+"\nRating: "
                +mgmt.getMovies()[sel].getRating()+"\nDesc:\n"+mgmt.getMovies()[sel].getDesc());
        tMovieMore.setWrapStyleWord(true);
        tMovieMore.setLineWrap(true);
    }//GEN-LAST:event_liMovieListValueChanged

    private void liShowListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_liShowListValueChanged
        int sel = liShowList.getSelectedIndex();
        if(sel < 0) return;
        tShowMore.setVisible(true);
        tShowMore.setText("ID:"+mgmt.getShows()[sel].getID()+"\nTime: "+mgmt.getShows()[sel].getFormatted()+"\nName: "+mgmt.getShows()[sel].getMovie().getName()
                +"\nGenre: "+mgmt.getShows()[sel].getMovie().getGenre()+"\nRating: "
                +mgmt.getShows()[sel].getMovie().getRating()+"\nDesc:\n"+mgmt.getShows()[sel].getMovie().getDesc());
        tShowMore.setWrapStyleWord(true);
        tShowMore.setLineWrap(true);
    }//GEN-LAST:event_liShowListValueChanged

    private void liProdListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_liProdListValueChanged
        int sel = liProdList.getSelectedIndex();
        if(sel < 0) return;
        tProdMore.setVisible(true);
        tProdMore.setText("ID:"+mgmt.getProds()[sel].getId()+"\nName: "+
                mgmt.getProds()[sel].getName()+"\nCount: "+
                mgmt.getProds()[sel].getCount()+"\nPrice: "+
                mgmt.getProds()[sel].getPrice());
        tProdMore.setWrapStyleWord(true);
        tProdMore.setLineWrap(true);
    }//GEN-LAST:event_liProdListValueChanged

    private void liAttrListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_liAttrListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_liAttrListMouseClicked

    private void liAttrListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_liAttrListValueChanged
        int sel = liAttrList.getSelectedIndex();
        if(sel < 0) return;
        tAttrMore.setVisible(true);
        tAttrMore.setText("ID:"+mgmt.getAttrs()[sel].getId()+"\nName: "+
                mgmt.getAttrs()[sel].getName()+"\nPrice: "+
                mgmt.getAttrs()[sel].getPrice());
        tAttrMore.setWrapStyleWord(true);
        tAttrMore.setLineWrap(true);
    }//GEN-LAST:event_liAttrListValueChanged

    private void bDelAttrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelAttrActionPerformed
        int sel = liAttrList.getSelectedIndex();
        if(sel < 0) return;
        mgmt.delAttr(sel);
        pMain.setVisible(true);
        pListAttractions.setVisible(false);
    }//GEN-LAST:event_bDelAttrActionPerformed

    private void bListAttractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListAttractionActionPerformed
        pMain.setVisible(false);
        pListAttractions.setVisible(true);
        tAttrMore.setVisible(false);
        String[] attrs = new String[mgmt.getAttrs().length];
        for(int i = 0;i<mgmt.getAttrs().length;i++){
            attrs[i] = mgmt.getAttrs()[i].getName();
        }
        liAttrList.setListData((String[])attrs);
    }//GEN-LAST:event_bListAttractionActionPerformed

    private void bAttrAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAttrAddActionPerformed
        String name = eAttrName.getText();
        float price = Float.valueOf(eAttrPrice.getText());
        mgmt.addAttr(name, price);
        pMain.setVisible(true);
        pOptions.setVisible(true);
        pAddAttraction.setVisible(false);
    }//GEN-LAST:event_bAttrAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddAttraction;
    private javax.swing.JButton bAddCRoom;
    private javax.swing.JButton bAddMov;
    private javax.swing.JButton bAddMovOK;
    private javax.swing.JButton bAddProd;
    private javax.swing.JButton bAddProductOK;
    private javax.swing.JButton bAddShow;
    private javax.swing.JButton bAddUser;
    private javax.swing.JButton bAttrAdd;
    private javax.swing.JButton bCRoomAdd;
    private javax.swing.JButton bClearLog;
    private javax.swing.JButton bClearStat;
    private javax.swing.JButton bDelAttr;
    private javax.swing.JButton bDelCRoomSel;
    private javax.swing.JButton bDelMovie;
    private javax.swing.JButton bDelProd;
    private javax.swing.JButton bDelShowOK;
    private javax.swing.JButton bDelUserOK;
    private javax.swing.JButton bExit;
    private javax.swing.JButton bGetLog;
    private javax.swing.JButton bGetStat;
    private javax.swing.JButton bListAttraction;
    private javax.swing.JButton bListCRoom;
    private javax.swing.JButton bListLogs;
    private javax.swing.JButton bListMov;
    private javax.swing.JButton bListProducts;
    private javax.swing.JButton bListRes;
    private javax.swing.JButton bListShow;
    private javax.swing.JButton bListStats;
    private javax.swing.JButton bListUser;
    private javax.swing.JButton bLoad;
    private javax.swing.JButton bLoadXML;
    private javax.swing.JButton bProdMore;
    private javax.swing.JButton bReturn;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bSaveMovSQL;
    private javax.swing.JButton bSaveXML;
    private javax.swing.JButton bShowAddSet;
    private javax.swing.JButton bShowMore;
    private javax.swing.JButton bShowShow;
    private javax.swing.JButton bUserAddOK;
    private javax.swing.JComboBox cbCRoomList;
    private javax.swing.JComboBox cbMovieList;
    private javax.swing.JComboBox cbType;
    private javax.swing.JComboBox cbUType;
    private javax.swing.JTextField eAttrName;
    private javax.swing.JTextField eAttrPrice;
    private javax.swing.JTextField eCRoomID;
    private javax.swing.JTextField eCount;
    private javax.swing.JTextField eDaySet;
    private javax.swing.JTextField eHourSet;
    private javax.swing.JTextField eMinuteSet;
    private javax.swing.JTextField eMonthSet;
    private javax.swing.JTextField eMovieGenre;
    private javax.swing.JTextField eMovieName;
    private javax.swing.JTextField eMovieRating;
    private javax.swing.JTextField eName;
    private javax.swing.JPasswordField ePassword;
    private javax.swing.JTextField ePrice;
    private javax.swing.JTextField eUserName;
    private javax.swing.JTextField eYearSet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lAttrName;
    private javax.swing.JLabel lAttrPrice;
    private javax.swing.JLabel lCRoomHello;
    private javax.swing.JLabel lCRoomSet;
    private javax.swing.JLabel lCount;
    private javax.swing.JLabel lDateSet;
    private javax.swing.JLabel lMovieDesc;
    private javax.swing.JLabel lMovieGenre;
    private javax.swing.JLabel lMovieName;
    private javax.swing.JLabel lMovieRating;
    private javax.swing.JLabel lMovieSet;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lPass;
    private javax.swing.JLabel lPassword;
    private javax.swing.JLabel lPrice;
    private javax.swing.JLabel lSaveInfo;
    private javax.swing.JLabel lSep1;
    private javax.swing.JLabel lSep2;
    private javax.swing.JLabel lSep3;
    private javax.swing.JLabel lTimeSet;
    private javax.swing.JLabel lType;
    private javax.swing.JLabel lUType;
    private javax.swing.JLabel lUserName;
    private javax.swing.JList liAttrList;
    private javax.swing.JList liCRoomList;
    private javax.swing.JList liLogList;
    private javax.swing.JList liMovieList;
    private javax.swing.JList liProdList;
    private javax.swing.JList liShowList;
    private javax.swing.JList liStatList;
    private javax.swing.JList liUserList;
    private javax.swing.JPanel pAddAttraction;
    private javax.swing.JPanel pAddCRoom;
    private javax.swing.JPanel pAddMov;
    private javax.swing.JPanel pAddProduct;
    private javax.swing.JPanel pAddShow;
    private javax.swing.JPanel pAddUser;
    private javax.swing.JPanel pListAttractions;
    private javax.swing.JPanel pListCRoom;
    private javax.swing.JPanel pListMov;
    private javax.swing.JPanel pListProducts;
    private javax.swing.JPanel pListRes;
    private javax.swing.JPanel pListShow;
    private javax.swing.JPanel pListUser;
    private javax.swing.JPanel pLogs;
    private javax.swing.JPanel pMain;
    private javax.swing.JPanel pOptions;
    private javax.swing.JPanel pStats;
    private javax.swing.JScrollPane sAttrLisst;
    private javax.swing.JScrollPane sAttrMore;
    private javax.swing.JScrollPane sProdList;
    private javax.swing.JScrollPane sProdMore;
    private javax.swing.JTextArea tAttrMore;
    private javax.swing.JTextArea tLogText;
    private javax.swing.JTextArea tMovieDesc;
    private javax.swing.JTextArea tMovieMore;
    private javax.swing.JTextArea tProdMore;
    private javax.swing.JTextArea tResList;
    private javax.swing.JTextArea tShowMore;
    private javax.swing.JTextArea tStatText;
    // End of variables declaration//GEN-END:variables
}
